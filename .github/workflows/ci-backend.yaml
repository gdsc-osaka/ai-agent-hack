name: CI (backend)

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/ci-backend.yaml'
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/ci-backend.yaml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  GCP_PROJECT_ID: 'recall-you'
  GCP_REGION: 'asia-northeast1'
  REPO_NAME: 'cloud-run-source-deploy'
jobs:
  analyze:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    permissions:
      checks: write
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: 'backend/pnpm-lock.yaml'
      - name: cache-node-modules
        uses: actions/cache@v3
        id: cache-node
        env:
          cache-name: cache-node
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-cache-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-cache-node-
            ${{ runner.os }}-cache-
            ${{ runner.os }}-
      - name: Install node modules
        if: ${{ steps.cache-node.outputs.cache-hit != 'true' }}
        run: pnpm i
      - name: Generate .env
        shell: bash
        run: |
          echo "" > .env
      - name: Lint
        shell: bash
        run: npm run lint
      - name: Test
        shell: bash
        run: npm run test:unit
      - name: Build
        shell: bash
        run: npm run build
  preview:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # OIDCË™çË®º„Å´ÂøÖË¶Å
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account: 'github-action-994212429@recall-you.iam.gserviceaccount.com'
          workload_identity_provider: 'projects/966744275445/locations/global/workloadIdentityPools/gh-pool/providers/gh-repo-provider'
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev
      - name: Build and Push API Image
        run: |
          docker build \
            -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/recall-you-api-preview:${{ github.sha }} \
            -f Dockerfile.preview.api .
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/recall-you-api-preview:${{ github.sha }}
      - name: Build and Push DB Image
        run: |
          docker build \
            -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/recall-you-db-preview:${{ github.sha }} \
            -f Dockerfile.preview.db .
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/recall-you-db-preview:${{ github.sha }}
      - name: Deploy to Cloud Run
        run: |
          PR_NUMBER=${{ github.event.number }}
          SERVICE_NAME="recall-you-api-preview-pr-${PR_NUMBER}"
          
          gcloud run deploy $SERVICE_NAME \
            --project=${{ env.GCP_PROJECT_ID }} \
            --region=${{ env.GCP_REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --labels="preview-env=true,created-at=$(date +%s),pr-number=$PR_NUMBER" \
            --container api \
              --image=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/recall-you-api-preview:${{ github.sha }} \
              --port=8080 \
              --set-env-vars="PULL_REQUEST_NUMBER=$PR_NUMBER" \
              --set-env-vars="DATABASE_URL=postgresql://user:password@localhost:5432/db" \
              --set-secrets="FIRE_SA=FIRE_SA:latest" \
            --container db \
              --image=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/recall-you-db-preview:${{ github.sha }} \
              --set-env-vars="PULL_REQUEST_NUMBER=$PR_NUMBER" \
              --set-env-vars="POSTGRES_USER=user" \
              --set-env-vars="POSTGRES_PASSWORD=password" \
              --set-env-vars="POSTGRES_DB=db" \

      # --- PR„Å´„Éó„É¨„Éì„É•„ÉºURL„Çí„Ç≥„É°„É≥„Éà ---
      - name: Get Preview URL and Comment on PR
        run: |
          SERVICE_URL=$(gcloud run services describe recall-you-api-preview-pr-${{ github.event.number }} --platform managed --region ${{ env.GCP_REGION }} --format 'value(status.url)')
          gh pr comment ${{ github.event.number }} --body "üöÄ Preview environment is ready! URL: $SERVICE_URL"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}